version: "3.7"

services:
  {{cookiecutter.project_slug}}:
    restart: always
    image: {{cookiecutter.project_slug}}:${VERSION}
    container_name: {{cookiecutter.project_slug}}
    user: "${USER_ID}:${GID}"
    ports:
      - 127.0.0.1:9090:8000
    environment:
      - ENV=production
      - API_VERSION=${VERSION}
      - MODULE_NAME=asgi
      - VARIABLE_NAME=app
      - APP_MODULE=asgi:app
      - GUNICORN_CONF=/app/config/gunicorn_config.py
      - WORKERS_PER_CORE=0.5
      - MAX_WORKERS=4
      - WEB_CONCURRENCY=2
      - HOST=0.0.0.0
      - PORT=8000
      - BIND=0.0.0.0:8000
      - LOG_LEVEL=INFO
      - WORKER_CLASS=uvicorn.workers.UvicornWorker
      - TIMEOUT=900
      - KEEP_ALIVE=30
      - GRACEFUL_TIMEOUT=120
      - ACCESS_LOG=logs/access.log
      - ERROR_LOG=logs/error.log
      - PROMETHEUS_MULTIPROC_DIR=/app/prometheus
    build:
      context: ./
      args:
        USER_ID: "${USER_ID}"
        GID: "${GID}"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./prometheus:/app/prometheus
    healthcheck:
      test: bash /app/scripts/check_health.sh || exit 1
      interval: 10m
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - net
  autoheal:
    restart: always
    image: willfarrell/autoheal
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
networks:
  net:
    name: net
    driver: bridge
